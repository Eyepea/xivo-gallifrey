#! /bin/sh /usr/share/dpatch/dpatch-run
## comment_support.dpatch by Proformatique
##
## DP: add support for "commented" lines in tables

@DPATCH@
Index: asterisk-addons-1.4.13/res/res_config_mysql.c
===================================================================
--- asterisk-addons-1.4.13.orig/res/res_config_mysql.c	2011-02-15 13:29:08.000000000 +0100
+++ asterisk-addons-1.4.13/res/res_config_mysql.c	2011-02-15 13:29:11.000000000 +0100
@@ -70,6 +70,7 @@
 static char   dbsock[50];
 static char   dbcharset[50];
 static int    dbport;
+static int    comment_support;
 static int    connected;
 static time_t connect_time;
 
@@ -127,7 +128,12 @@
 	if ((valsz = strlen (newval)) * 2 + 1 > sizeof(buf))
 		valsz = (sizeof(buf) - 1) / 2;
 	mysql_real_escape_string(&mysql, buf, newval, valsz);
-	snprintf(sql, sizeof(sql), "SELECT * FROM %s WHERE %s%s '%s'", table, newparam, op, buf);
+
+	if (!comment_support)
+		snprintf(sql, sizeof(sql), "SELECT * FROM %s WHERE %s%s '%s'", table, newparam, op, buf);
+	else
+		snprintf(sql, sizeof(sql), "SELECT * FROM %s WHERE NOT commented AND %s%s '%s'", table, newparam, op, buf);
+
 	while((newparam = va_arg(ap, const char *))) {
 		newval = va_arg(ap, const char *);
 		if(!strchr(newparam, ' ')) op = " ="; else op = "";
@@ -242,7 +248,12 @@
 	if ((valsz = strlen (newval)) * 2 + 1 > sizeof(buf))
 		valsz = (sizeof(buf) - 1) / 2;
 	mysql_real_escape_string(&mysql, buf, newval, valsz);
-	snprintf(sql, sizeof(sql), "SELECT * FROM %s WHERE %s%s '%s'", table, newparam, op, buf);
+
+	if (!comment_support)
+		snprintf(sql, sizeof(sql), "SELECT * FROM %s WHERE %s%s '%s'", table, newparam, op, buf);
+	else
+		snprintf(sql, sizeof(sql), "SELECT * FROM %s WHERE NOT commented AND %s%s '%s'", table, newparam, op, buf);
+
 	while((newparam = va_arg(ap, const char *))) {
 		newval = va_arg(ap, const char *);
 		if(!strchr(newparam, ' ')) op = " ="; else op = "";
@@ -581,6 +592,12 @@
                         strncpy(dbsock, s, sizeof(dbsock) - 1);
                 }
 
+		if(!(s=ast_variable_retrieve(config, "general", "comment_support"))) {
+			comment_support = 0;
+		} else {
+			comment_support = ast_true(s);
+		}
+
 		if (s = ast_variable_retrieve(config, "general", "dbcharset")) {
 			ast_copy_string(dbcharset, s, sizeof(dbcharset));
 		}
