2009-04-08  Thomas BERNARD <tbernard@proformatique.com>

    pf_atxfer_cid_display
    $Revision$
    $Date$

    Fix some callerid displaying during ATXFER.

Index: asterisk-1.4.39.1/res/res_features.c
===================================================================
--- asterisk-1.4.39.1.orig/res/res_features.c	2011-01-21 17:17:13.000000000 +0100
+++ asterisk-1.4.39.1/res/res_features.c	2011-01-21 17:17:18.000000000 +0100
@@ -1030,6 +1030,7 @@
 			hangup_dont = 1;
 		}
 		res = ast_bridge_call(transferer, newchan, &bconfig);
+		ast_log(LOG_DEBUG, "do_atxfer ast_bridge_call(%s, %s, ...) returned %d\n", transferer->name, newchan->name, res);
 		if (hangup_dont) {
 			ast_set_flag(chan, AST_FLAG_BRIDGE_HANGUP_DONT);
 		}
@@ -1153,9 +1154,24 @@
 		tobj->bconfig.end_bridge_callback_data_fixup(&tobj->bconfig, tobj->peer, tobj->chan);
 	}
 
+	ast_log(LOG_DEBUG, "do_atxfer playing transfer sound on newchan=%s\n", newchan->name);
 	if (ast_stream_and_wait(newchan, xfersound, newchan->language, ""))
 		ast_log(LOG_WARNING, "Failed to play transfer sound!\n");
+
+	ast_log(LOG_DEBUG, "do_atxfer newchan=%s cid=(%s,%s,0x%02x) lid=(%s,%s,0x%02x)\n", tobj->chan->name,
+	        tobj->chan->cid.cid_num, tobj->chan->cid.cid_name, tobj->chan->cid.cid_pres,
+	        tobj->chan->lid.lid_num, tobj->chan->lid.lid_name, tobj->chan->lid.lid_pres);
+	ast_log(LOG_DEBUG, "do_atxfer xferchan=%s cid=(%s,%s,0x%02x) lid=(%s,%s,0x%02x)\n", tobj->peer->name,
+	        tobj->peer->cid.cid_num, tobj->peer->cid.cid_name, tobj->peer->cid.cid_pres,
+	        tobj->peer->lid.lid_num, tobj->peer->lid.lid_name, tobj->peer->lid.lid_pres);
+
+	// display correct caller ids at both end
+	ast_connectedline_update(newchan, xferchan->cid.cid_num, xferchan->cid.cid_name, xferchan->cid.cid_pres);
+	ast_connectedline_update(xferchan, newchan->cid.cid_num, newchan->cid.cid_name, newchan->cid.cid_pres);
+
+	ast_log(LOG_DEBUG, "do_atxfer calling ast_bridge_call_thread_launch(%s, %s)\n", tobj->chan->name, tobj->peer->name);
 	ast_bridge_call_thread_launch(tobj);
+
 	return -1;	/* XXX meaning the channel is bridged ? */
 }
 
@@ -1519,12 +1535,19 @@
 	struct ast_channel *active_channel;
 	int res = 0, ready = 0;
 	
+    ast_log(LOG_DEBUG, "ast_feature_request_and_dial type=%s cid_num=%s cid_name=%s\n", type, cid_num, cid_name);// thomas
 	if ((chan = ast_request(type, format, data, &cause))) {
 		ast_set_callerid(chan, cid_num, cid_name, cid_num);
+		ast_channel_lock(chan);
+		chan->lid.lid_num = ast_strdup(cid_num);
+		chan->lid.lid_name = ast_strdup(cid_name);
+		chan->lid.lid_ani = ast_strdup(cid_num);
+		ast_channel_unlock(chan);
 		ast_string_field_set(chan, language, language);
 		ast_channel_inherit_variables(caller, chan);	
 		pbx_builtin_setvar_helper(chan, "TRANSFERERNAME", caller->name);
 			
+		ast_log(LOG_DEBUG, "ast_feature_request_and_dial ast_call(%s, %s, %d)\n", chan->name, (const char *)data, timeout);// thomas
 		if (!ast_call(chan, data, timeout)) {
 			struct timeval started;
 			int x, len = 0;
@@ -1673,6 +1696,9 @@
 	if (outstate)
 		*outstate = state;
 
+	ast_log(LOG_DEBUG, "ast_feature_request_and_dial end state=%d chan=%s(%s,%s) caller=%s(%s,%s)\n",
+	        state, chan?chan->name:"NULL", chan?chan->cid.cid_num:"", chan?chan->cid.cid_name:"",
+	        caller->name, caller->cid.cid_num, caller->cid.cid_name);//thomas
 	return chan;
 }
 
