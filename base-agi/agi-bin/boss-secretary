#!/usr/bin/python
#
# Authors : Sylvain Boily, Guillaume Knispel
#           Proformatique
#           67, rue Voltaire
#           92800 PUTEAUX
#           (+33/0)1.41.38.99.60
#           mailto:technique@proformatique.com
#           (C) 2007 Proformatique
#

__version__ = "$Revision: 917 $ $Date: 2007-06-15 16:33:51 +0200 (Fri, 15 Jun 2007) $"
__license__ = """
    Copyright (C) 2007, Proformatique

    This software is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
"""

CONFIG_FILE = '/etc/asterisk/xivo_agi.conf'

import xivo.to_path

import sys
import anysql
from BackSQL import backsqlite
from BackSQL import backmysql
import ConfigParser
from ConfigDict import *

options = { "db_uri" : "" }
conf_obj = ConfigParser.ConfigParser()
conf_obj.readfp(open(CONFIG_FILE))
FillDictFromConfigSection(options, conf_obj, "db")

from agi import *

import operator, string

try:
        conn = anysql.connect_by_uri(options['db_uri'])
except:
        ago.verbose("Unable to connect to %s" %options['db_uri'])
        raise

# This is the configuration file, please do not change the path because if was editable by xivo web interface
file = "/etc/asterisk/xivo_boss-secretary.conf"

agi = AGI()

(tech, user) = agi.get_variable('XIVO_INTERFACE').split('/')
context = agi.get_variable('REAL_CONTEXT')
dialpeer = agi.get_variable('DIALEDPEERNUMBER')
callerid = agi.env['agi_callerid']

try:
        config = ConfigParser.ConfigParser()
        config.readfp(open(file))
except IOError:
        agi.verbose('Configuration file not found : %s' % file)
        raise

if not config.has_section('general'):
        agi.verbose('Erreur general section doesn\'t exist')
        sys.exit()

if int(config.get('general','actived')) != 1:
        agi.verbose('Function not actived')
        sys.exit()

if int(config.get(user,'actived')) != 1:
        agi.verbose('Function for user %s not actived' % user)
        sys.exit()

if config.get(user,'type') != 'boss':
        agi.verbose('Sorry this user is not a boss')
        sys.exit()

secretary = config.get(user,'secretary').split(',')
nbring = config.get(user,'nbring')
strategy = config.get(user,'strategy')
sametime = int(config.get(user,'sametime'))

#astkey = int(config.get(user,'astkey'))
astkey = ''

if astkey:
        if agi.database_get('%s/users/%s/BS' %(context, user), astkey) != 0:
                bs = int(agi.database_get('%s/users/%s/BS' %(context, user), astkey))
                if bs == 0:
                        agi.verbose('Function for user %s not actived' % user)
                        sys.exit()
        else:
                agi.verbose('Function for user %s not actived' % user)
                sys.exit()
s_number = []

if secretary:
        for s in secretary:
                if config.get(s,'context') == context:
                        s_num = config.get(s,'number')
                        s_chan = config.get(s,'chan')
                        s_nbring = config.get(s,'nbring')
                        s_sametime = int(config.get(s,'sametime'))
                        if s_num == callerid:
                                agi.verbose('No filter is actived')
                                sys.exit()
                        if s_num == dialpeer:
                                agi.verbose('No filter is actived')
                                sys.exit()
                        s_number.append(s_num)

t = str(int(nbring)*5)
s_t = str(int(s_nbring)*5)
if t != "0":
        if sametime != 0:
                b_chan = tech + "/" + user + "&" + s_chan
        else:
                b_chan = tech + "/" + user
        agi.appexec("DIAL", "%s|%s" %(b_chan, t))

for num in s_number:
        agi.set_callerid("\"%s Filtrage actif <%s>\"" %(user,callerid))
        if s_chan:
                if s_sametime != 0:
                        s_chan = tech + "/" + user + "&" + s_chan
                agi.appexec("DIAL", "%s|%s" %(s_chan, str(s_t)))
                agi.set_variable("BOSS", 1)
        else:
                agi.appexec("DIAL", "Local/%s@%s" %(num, context))

agi.appexec("GOTO","macro-incoming_user_end|NOANSWER|1")
