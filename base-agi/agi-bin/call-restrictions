#!/usr/bin/python
#
# Authors : Cedric Lemarchand, Sylvain Boily, Guillaume Knispel
#           Proformatique
#           67, rue Voltaire
#           92800 PUTEAUX
#           (+33/0)1.41.38.99.60
#           mailto:technique@proformatique.com
#           (C) 2007 Proformatique
#

__version__ = "$Revision: 1136 $ $Date: 2007-07-13 19:49:46 +0200 (Fri, 13 Jul 2007) $"
__license__ = """
    Copyright (C) 2007, Proformatique

    This software is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
"""

import ConfigParser, os, sys, re

CONFIG_FILE = '/etc/asterisk/xivo_agi.conf'

import xivo.to_path

import anysql
from BackSQL import backsqlite
from BackSQL import backmysql
import ConfigParser
from ConfigDict import *
from agi import *

options = { "db_uri" : "" }
conf_obj = ConfigParser.ConfigParser()
conf_obj.readfp(open(CONFIG_FILE))
FillDictFromConfigSection(options, conf_obj, "db")

agi = AGI()
agi.DEBUG_PASSTHROUGH=0

rules = '/etc/asterisk/xivo_call_restrictions.conf'

parser = ConfigParser.ConfigParser()
read = parser.readfp(open(rules))

called_number = agi.get_variable('MACRO_EXTEN')
user_number = agi.env['agi_callerid']
agi.set_variable('PIN', parser.get('general','pin'))

for each in parser.sections():
	if each != 'general':
		regexp = parser.get(each,'regexp')
		if re.search(regexp,called_number):
			users_list = parser.get(each,'users')
			for user in users_list.split(','):
				if user == 'all':
					agi.set_variable('GRANTED', 1)
					sys.exit()
				if user == user_number:
					agi.set_variable('GRANTED', 1)
					sys.exit()
				else:
					agi.set_variable('GRANTED', 0)

			agi.stream_file('no_right_number')
			agi.set_variable('GRANTED', 0)
			sys.exit()

agi.set_variable('GRANTED', 0)
sys.exit()
