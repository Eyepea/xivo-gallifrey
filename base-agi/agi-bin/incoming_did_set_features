#!/usr/bin/python
#
# Authors : Sylvain Boily, Guillaume Knispel, Richard Braun
#	   Proformatique
#	   67, rue Voltaire
#	   92800 PUTEAUX
#	   (+33/0)1.41.38.99.60
#	   mailto:technique@proformatique.com
#	   (C) 2007 Proformatique

# TODO: Filter commented SQL rows

__version__ = "$Revision$ $Date$"
__license__ = """
    Copyright (C) 2007, Proformatique

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
"""

CONFIG_FILE = '/etc/asterisk/xivo_agi.conf'

import xivo.to_path

import sys
import anysql
import except_tb
import agi_helpers
from BackSQL import backsqlite
from BackSQL import backmysql
import ConfigDict
from agi import *

agi = AGI()
db_uri = ConfigDict.ReadSingleKey(CONFIG_FILE, 'db', 'db_uri')

# Cursors have a weak reference on their connection, so make a strong one.
conn = agi_helpers.db_connect(agi, db_uri)
cursor = conn.cursor()
srcnum = agi.get_variable('REAL_SRCNUM')
dstnum = agi.get_variable('REAL_DSTNUM')
context = agi.get_variable('REAL_CONTEXT')
exten_pattern = agi.get_variable('REAL_EXTENPATTERN')

# TODO: handle caller ID.

cursor.query("SELECT ${columns} FROM incall INNER JOIN extenumbers "
             "ON incall.id = extenumbers.typeval "
             "WHERE extenumbers.exten = %s "
             "AND extenumbers.context = %s "
             "AND extenumbers.type = 'incall' "
             "AND incall.linked = 1 "
             "AND incall.commented = 0",
             [('incall.' + x) for x in ('type', 'typeval')],
             (exten_pattern, context))
res = cursor.fetchone()

if not res:
	agi_helpers.dp_break(agi, "Unknown extension '%s'" % exten_pattern)

agi_helpers.set_fwd_vars(agi, cursor, res['incall.type'], res['incall.typeval'], "XIVO_DIDTYPE", "XIVO_DIDTYPEVAL", "XIVO_DIDCONTEXT")
agi.verbose('AGI script "%s" successfully executed' % sys.argv[0])
