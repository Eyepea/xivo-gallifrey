#!/usr/bin/python

__version__ = "$Revision$ $Date$"
__license__ = """
    Copyright (C) 2007, 2008 Proformatique

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
"""

CONFIG_FILE = '/etc/asterisk/xivo_agi.conf'

import xivo.to_path

import sys
import anysql
import agi_helpers
from BackSQL import backsqlite
from BackSQL import backmysql
import ConfigDict
from agi import *
import agitb

agi = AGI()
agitb.enable(agi)
db_uri = ConfigDict.ReadSingleKey(CONFIG_FILE, 'db', 'db_uri')

def forgetimefield(start, end, includesep = False):
	if start == '*':
		timestr = '*'
	else:
		if end == '':
			timestr = '%s' % start
		else:
			timestr = '%s-%s' % (start, end)

	if includesep:
		return ',%s' % timestr
	else:
		return timestr

def forgetime(res):
	timestr = forgetimefield(res['timebeg'], res['timeend'])
	timestr += forgetimefield(res['daynamebeg'], res['daynameend'], True)
	timestr += forgetimefield(res['daynumbeg'], res['daynumend'], True)
	timestr += forgetimefield(res['monthbeg'], res['monthend'], True)
	return timestr

# Cursors have a weak reference on their connection, so make a strong one.
conn = agi_helpers.db_connect(agi, db_uri)
cursor = conn.cursor()
id = sys.argv[1]

cursor.query("SELECT ${columns} FROM schedule "
             "WHERE id = %s "
             "AND linked = 1 "
             "AND commented = 0",
             ('timebeg', 'timeend', 'daynamebeg', 'daynameend', 'daynumbeg', 'daynumend', 'monthbeg', 'monthend', 'typetrue', 'typevaltrue', 'applicationvaltrue', 'typefalse', 'typevalfalse', 'applicationvalfalse'),
             (id,))
res = cursor.fetchone()

if not res:
	dp_break("Invalid schedule ID '%s'" % id)

agi.set_variable("XIVO_SCHEDULE_TIMERANGE", forgetime(res))
agi_helpers.set_fwd_vars(agi, cursor, res['typetrue'], res['typevaltrue'], res['applicationvaltrue'], 'XIVO_SCHEDULE_TYPETRUE', 'XIVO_SCHEDULE_TYPEVAL1TRUE', 'XIVO_SCHEDULE_TYPEVAL2TRUE')
agi_helpers.set_fwd_vars(agi, cursor, res['typefalse'], res['typevalfalse'], res['applicationvalfalse'], 'XIVO_SCHEDULE_TYPEFALSE', 'XIVO_SCHEDULE_TYPEVAL1FALSE', 'XIVO_SCHEDULE_TYPEVAL2FALSE')

agi.verbose('AGI script "%s" successfully executed' % sys.argv[0])
