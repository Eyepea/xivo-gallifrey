#!/usr/bin/python
#
# Authors : Sylvain Boily, Guillaume Knispel
#           Proformatique
#           67, rue Voltaire
#           92800 PUTEAUX
#           (+33/0)1.41.38.99.60
#           mailto:technique@proformatique.com
#           (C) 2007 Proformatique
#

__version__ = "$Revision$ $Date$"
__license__ = """
    Copyright (C) 2007, Proformatique

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
"""

# XXX TODO BUGBUG FIXME SATAN: any print or sys.stdout.write is probably a bug,
# remove every prints and include the correct modules (Xilun - 2007-06-15)

CONFIG_FILE = '/etc/asterisk/xivo_agi.conf'

import xivo.to_path

import sys
import anysql
from BackSQL import backsqlite
from BackSQL import backmysql
import ConfigParser
from ConfigDict import *

options = { "db_uri" : "" }
conf_obj = ConfigParser.ConfigParser()
conf_obj.readfp(open(CONFIG_FILE))
FillDictFromConfigSection(options, conf_obj, "db")

try:
        conn = anysql.connect_by_uri(options['db_uri'])
except:
        print "VERBOSE \"Unable to connect to %s\"" %options['db_uri']
        raise

if len(sys.argv) != 4:
        print "Missing args!"
        sys.exit()

# FIXME : Make the table dynamic (Xilun 2007-06-15: what does that mean? its name configurable maybe?)
table = 'uservoicemail'

context = sys.argv[1]
mailbox = sys.argv[2]
password = sys.argv[3]

cursor = conn.cursor()
query = "UPDATE %s SET password='%s' WHERE context='%s' AND mailbox='%s'" % (table, password, context, mailbox)
cursor.execute(query)
conn.commit()
