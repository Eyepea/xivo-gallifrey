; Work around a bug in the Thomson phones concerning originate calls.
[macro-incoming_user_handle_thomson_callerid]
exten = s,1,GotoIf(${XIVO_ORIGSRC}?:exit)
exten = s,n,Set(CALLERID(num)=${XIVO_ORIGSRC})
exten = s,n(exit),MacroExit()

; Force Thomson phones to remain silent while ringing.
;
; As this macro can be called multiple times for the same channel, and Thomson
; phones are known to bug when the header line added by this macro is present
; several times, the XIVO_ALREADYSILENT macro is set so that consecutive calls
; do not attempt to update the headers again.
[macro-incoming_user_make_thomson_silent]
exten = s,1,GotoIf(${XIVO_ISTHOMSON}?:exit)
exten = s,n,GotoIf(${XIVO_ALREADYSILENT}?exit)
exten = s,n,SIPAddHeader("Alert-Info:<http://www.proformatique.com>\;info=Silent")
exten = s,n,Set(XIVO_ALREADYSILENT=1)
exten = s,n(exit),MacroExit()

; Hooks executed when an incoming call to a user arrives. This script performs
; various checks and sets channel variables. It also handles pre-call
; redirections (do not disturb and unconditional redirections).
[macro-incoming_user_start]
exten = s,1,Set(REAL_EXTEN=${MACRO_EXTEN})
exten = s,n,Set(REAL_CONTEXT=${MACRO_CONTEXT})
exten = s,n,Set(GROUP()=${REAL_EXTEN})
exten = s,n,Macro(incoming_user_handle_thomson_callerid)
exten = s,n,Macro(incoming_user_make_thomson_silent)
exten = s,n,AGI(incoming_user_set_features)
exten = s,n,GotoIf(${XIVO_ENABLEDND}?DND,1)
exten = s,n,GotoIf(${XIVO_ENABLEUNC}?UNC,1)
;exten = s,n,AGI(boss_secretary)
exten = s,n,AGI(xivo_push|127.0.0.1)
;exten = s,n,Macro(get-status-aim)

exten = DND,1,Macro(incoming_user_voicemail)

exten = UNC,1,Macro(incoming_user_forward,UNC)
exten = UNC,n,Macro(incoming_user_voicemail)

; This macro actually performs the call. The macro incoming_user_start must
; have been called before using this macro.
[macro-incoming_user_call]
exten = s,1,Dial(${XIVO_PROTOCOL}/${XIVO_NAME},${XIVO_RINGSECONDS},${XIVO_CALLOPTIONS})
exten = s,n,NoOp(DIALSTATUS=${DIALSTATUS})

; This macro determines the action(s) to be taken when a call ends. This
; includes redirections on no answer, if busy/congested, or if the channel
; is unavailable. Macros incoming_user_start and incoming_user_call must
; have been called before using this macro.
[macro-incoming_user_end]
exten = s,1,Goto(${DIALSTATUS},1)

exten = ANSWER,1,Hangup()

exten = CANCEL,1,Hangup()

exten = DONTCALL,1,Hangup()

exten = TORTURE,1,Hangup()

exten = NOANSWER,1,Macro(incoming_user_forward_voicemail,RNA)

exten = BUSY,1,Macro(incoming_user_forward_voicemail,BUSY)

exten = CONGESTION,1,Macro(incoming_user_forward_voicemail,CONGESTION)

exten = CHANUNAVAIL,1,Macro(incoming_user_forward_voicemail,UNAVAIL)

; Wrapper macro that calls both incoming_user_forward and
; incoming_user_voicemail.
[macro-incoming_user_forward_voicemail]
exten = s,1,Macro(incoming_user_forward,${ARG1})
exten = s,n,Macro(incoming_user_voicemail)

; This macro handles call forwarding. It takes one parameter, which is the
; cause of the forwarding, used to find the type of the forwarding.
; This can be one of :
;  o RNA (no answer)
;  o BUSY
;  o CONGESTION
;  o UNAVAIL
;
; This macro always returns, except if the type of the forwarding is "endcall".
;
; The AGI script set_user_features must have been called before using this macro
; because this script sets the various XIVO_XXX variables required to correctly
; determine the new destination.
[macro-incoming_user_forward]
exten = s,1,Set(XIVO_FWD_TYPE=${XIVO_FWD_TYPE${ARG1}})
exten = s,n,Set(XIVO_FWD_TYPEVAL=${XIVO_FWD_TYPEVAL${ARG1}})
exten = s,n,Goto(${XIVO_FWD_TYPE},1)

exten = endcall,1,Goto(${XIVO_FWD_TYPEVAL})
exten = endcall,n(none),MacroExit()
exten = endcall,n(hangup),Hangup()
exten = endcall,n(busy),Busy()
exten = endcall,n(congestion),Congestion()

exten = application,1,NoOp(Not implemented yet)

exten = user,1,Dial(Local/${XIVO_FWD_TYPEVAL}@${REAL_CONTEXT})

; TODO: macro
exten = group,1,NoOp(Not implemented yet)

; TODO: macro
exten = queue,1,NoOp(Not implemented yet)

; TODO: macro
exten = meetme,1,NoOp(Not implemented yet)

exten = schedule,1,AGI(schedule,${XIVO_FWD_TYPEVAL})
exten = schedule,n,GotoIfTime(${XIVO_SCHEDULE_TIMERANGE}?schedule_true)
exten = schedule,n(schedule_false),Set(XIVO_FWD_TYPE=${XIVO_SCHEDULE_TYPEFALSE})
exten = schedule,n,Set(XIVO_FWD_TYPEVAL=${XIVO_SCHEDULE_TYPEVALFALSE})
exten = schedule,n,Goto(${XIVO_FWD_TYPE},1)
exten = schedule,n(schedule_true),Set(XIVO_FWD_TYPE=${XIVO_SCHEDULE_TYPETRUE})
exten = schedule,n,Set(XIVO_FWD_TYPEVAL=${XIVO_SCHEDULE_TYPEVALTRUE})
exten = schedule,n,Goto(${XIVO_FWD_TYPE},1)

exten = sound,1,Playback(${XIVO_FWD_TYPEVAL})

exten = custom,1,Exec(${XIVO_FWD_TYPEVAL})

; This macro checks the availibility of the user voicemail box and redirects
; the caller to it if applicable. This macro unconditionally hangs up the
; channel.
[macro-incoming_user_voicemail]
exten = s,1,GotoIf(${XIVO_ENABLEVOICEMAIL}?:unreachable)
exten = s,n,MailboxExists(${REAL_EXTEN}@${REAL_CONTEXT})
exten = s,n,GotoIf($["${VMBOXEXISTSSTATUS}" = "SUCCESS"]?:unreachable)
exten = s,n,Voicemail(${REAL_EXTEN}@${REAL_CONTEXT})
exten = s,n,Goto(end)
exten = s,n(unreachable),Playback(user_unreachable)
exten = s,n(end),Hangup()
