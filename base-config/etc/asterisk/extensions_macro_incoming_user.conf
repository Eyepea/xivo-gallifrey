; Entry point for incoming calls to users.
[macro-incoming_user]
exten = s,1,Set(LANGUAGE()=fr)
exten = s,n,Set(REAL_SRCNUM=${CALLERID(num)})
exten = s,n,Set(REAL_DSTNUM=${MACRO_EXTEN})
exten = s,n,Set(REAL_CONTEXT=${MACRO_CONTEXT})
exten = s,n,GotoIf(${REAL_CALLTYPE}?incoming_user_start)
exten = s,n,Set(REAL_CALLTYPE=intern)
exten = s,n(incoming_user_start),Macro(incoming_user_start)
exten = s,n,Macro(incoming_user_call)
exten = s,n,Macro(incoming_user_end)

exten = t,1,Hangup()
exten = h,1,Hangup()
exten = i,1,Playback(user-invalid)

; Hooks executed when an incoming call to a user arrives. This script performs
; various checks and sets channel variables. It also handles pre-call
; redirections (do not disturb and unconditional redirections).
;
; XXX Race condition when checking the number of simultaneous calls.
[macro-incoming_user_start]
exten = s,1,Set(GROUP()=${REAL_DSTNUM})
exten = s,n,Macro(incoming_user_handle_thomson_callerid)
;exten = s,n,Macro(incoming_user_make_thomson_silent)
exten = s,n,Macro(user_rights_check)
exten = s,n,Macro(ring_type_set)
exten = s,n,AGI(incoming_user_set_features)

exten = s,n,GotoIf(${XIVO_BSFILTER_BYPASS}?bypass_bsfilter)
exten = s,n,GotoIf(${XIVO_BSFILTER}?:bypass_bsfilter)
exten = s,n,Macro(incoming_user_bsfilter)
exten = s,n(bypass_bsfilter),GotoIf(${XIVO_INTERFACE}?:error,1)
exten = s,n,Gotoif(${XIVO_CALLRECORDFILE}?:$[${PRIORITY} + 2])
exten = s,n,MixMonitor(${XIVO_CALLRECORDFILE})
exten = s,n,GotoIf(${XIVO_ENABLEDND}?DND,1)
exten = s,n,GotoIf(${XIVO_ENABLEUNC}?UNC,1)
exten = s,n,GotoIf($[${GROUP_COUNT(${REAL_DSTNUM})} > ${XIVO_SIMULTCALLS}]?BUSY,1)
exten = s,n,AGI(xivo_push|127.0.0.1)
exten = s,n,GotoIf($["${XIVO_AIMSTATUS}" = ""]?exit)
exten = s,n,GotoIf($[${XIVO_AIMSTATUS} = 1]?BUSY,1)
exten = s,n,GotoIf($[${XIVO_AIMSTATUS} > 1]?CHANUNAVAIL,1)
exten = s,n(exit),MacroExit()

exten = DND,1,Macro(incoming_user_voicemail)

exten = UNC,1,Macro(incoming_user_forward_voicemail,UNC)

exten = BUSY,1,Set(XIVO_VMOPTIONS=b)
exten = BUSY,n,Macro(incoming_user_forward_voicemail,BUSY)

exten = CHANUNAVAIL,1,Macro(incoming_user_forward_voicemail,UNAVAIL)

exten = error,1,NoOp(Unable to fetch user features, this is a bug)
exten = error,n,Hangup

; This macro actually performs the call. The macro incoming_user_start must
; have been called before using this macro.
[macro-incoming_user_call]
exten = s,1,Dial(${XIVO_INTERFACE},${XIVO_RINGSECONDS},${XIVO_CALLOPTIONS})
exten = s,n,NoOp(DIALSTATUS=${DIALSTATUS})
; This macro determines the action(s) to be taken when a call ends. This
; includes redirections on no answer, if busy/congested, or if the channel
; is unavailable. Macros incoming_user_start and incoming_user_call must
; have been called before using this macro.
[macro-incoming_user_end]
exten = s,1,Goto(${DIALSTATUS},1)

exten = ANSWER,1,Hangup()

exten = CANCEL,1,Hangup()

exten = DONTCALL,1,Playback(vm-nonumber)
exten = DONTCALL,n,Hangup()

exten = TORTURE,1,Playback(tt-weasels)
exten = TORTURE,n,Hangup()

exten = NOANSWER,1,Macro(incoming_user_forward_voicemail,RNA)

exten = BUSY,1,Set(XIVO_VMOPTIONS=b)
exten = BUSY,n,Macro(incoming_user_forward_voicemail,BUSY)

exten = CONGESTION,1,Macro(incoming_user_forward_voicemail,CONGESTION)

exten = CHANUNAVAIL,1,Macro(incoming_user_forward_voicemail,UNAVAIL)

; Wrapper macro that calls both incoming_user_forward and
; incoming_user_voicemail.
[macro-incoming_user_forward_voicemail]
exten = s,1,GotoIf(${XIVO_FWD_TYPE${ARG1}_FROMDS}?skipmessage)
exten = s,n,Playback(find-user)
exten = s,n(skipmessage),Macro(forward,${XIVO_FWD_TYPE${ARG1}},${XIVO_FWD_TYPEVAL1${ARG1}},${XIVO_FWD_TYPEVAL2${ARG1}})
exten = s,n,Macro(incoming_user_voicemail)

; This macro checks the availability of the user voicemail box and redirects
; the caller to it if applicable. This macro unconditionally hangs up the
; channel.
[macro-incoming_user_voicemail]
exten = s,1,GotoIf(${XIVO_ENABLEVOICEMAIL}?:unreachable)
exten = s,n,MailboxExists(${REAL_DSTNUM}@${REAL_CONTEXT})
exten = s,n,GotoIf($["${VMBOXEXISTSSTATUS}" = "SUCCESS"]?:unreachable)
exten = s,n,GotoIf($["${XIVO_VMOPTIONS}" = "b"]?voicemail)
exten = s,n,Set(XIVO_VMOPTIONS=u)
exten = s,n(voicemail),Voicemail(${REAL_DSTNUM}@${REAL_CONTEXT},${XIVO_VMOPTIONS})
exten = s,n,Goto(end)
exten = s,n(unreachable),Playback(user-unreachable)
exten = s,n(end),Hangup()

; Parallel dialplan paths used when a boss-secretary filter is enabled.
; This macro hangs up the call when finished, and thus doesn't return to the
; upper dialplan path.
;
; The XIVO_BSFILTER_BYPASS variable is set to allow secretaries to transfer
; calls to their bosses.
;
; XXX This gives secretary the possibility to bypass any control of any kind
; at this moment. Future implementations will assert the secretary is
; associated to the boss she's forwarding to.
[macro-incoming_user_bsfilter]
exten = s,1,GotoIf(${XIVO_BSFILTER_MODE}?:error,1)
exten = s,n,Set(XIVO_BSFILTER_BYPASS=1)
exten = s,n,Goto(${XIVO_BSFILTER_MODE},1)

exten = bossfirst-simult,1,Dial(${XIVO_BSFILTER_BOSS_INTERFACE},${XIVO_BSFILTER_BOSS_TIMEOUT})
exten = bossfirst-simult,n,Goto(secretary-simult,1)

exten = secretary-simult,1,Dial(${XIVO_BSFILTER_INTERFACE},${XIVO_BSFILTER_TIMEOUT})
exten = secretary-simult,n,Goto(rna,1)

exten = all,1,Dial(${XIVO_BSFILTER_BOSS_INTERFACE}&${XIVO_BSFILTER_INTERFACE},${XIVO_BSFILTER_TIMEOUT})
exten = all,n,Goto(rna,1)

exten = bossfirst-serial,1,Dial(${XIVO_BSFILTER_BOSS_INTERFACE},${XIVO_BSFILTER_BOSS_TIMEOUT})
exten = bossfirst-serial,n,Goto(secretary-serial,1)

exten = secretary-serial,1,Set(i=0)
exten = secretary-serial,n,While(${XIVO_BSFILTER_SECRETARY${i}_INTERFACE})
exten = secretary-serial,n,Dial(${XIVO_BSFILTER_SECRETARY${i}_INTERFACE},${XIVO_BSFILTER_SECRETARY${i}_TIMEOUT})
exten = secretary-serial,n,Set(i=$[${i} + 1])
exten = secretary-serial,n,EndWhile
exten = secretary-serial,n,Goto(rna,1)

exten = rna,1,NoOp(Nobody answered)
exten = rna,n,Macro(forward,${XIVO_BSFILTER_FWD_TYPERNA},${XIVO_BSFILTER_FWD_TYPEVAL1RNA},${XIVO_BSFILTER_FWD_TYPEVAL2RNA})
exten = rna,n,Hangup

exten = error,1,NoOp(Invalid boss-secretary mode, this is a bug)
exten = error,n,Hangup
