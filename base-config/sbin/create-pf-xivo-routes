#!/usr/bin/python
__version__ = "$Revision$ $Date$"
__license__ = """
    Copyright (C) 2010  Proformatique, Guillaume Bour <gbour@proformatique.com>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

"""
	XiVO network routes manipulation - auto apply routes when up'ing network interface
	show be moved to /etc/network/ip-up.d (debian-specific)
"""

import os
import sys
import logging
import logging.handlers
import traceback
import ConfigParser

from xivo import network

CFGFILE = '/etc/pf-xivo/routes'

logger = logging.getLogger('xivo-routes')
logger.addHandler(logging.handlers.SysLogHandler())
logger.setLevel(logging.INFO)

if __name__ == '__main__':
    iface = os.environ['IFACE']
    mode  = os.environ['MODE']  # start/stop

    logger.info("XiVO custom routes on %s interface (mode=%s)" % (iface, mode))

    if mode != 'start':
        sys.exit(0)

    cfg = ConfigParser.ConfigParser()
    cfg.read(CFGFILE)

    if not cfg.has_section(iface):
        sys.exit(0)

    for name, rule  in cfg.items(iface):
        logger.info("  . applying *%s* rule" % name)
        print name, rule
        rule = rule.split(';')
        if len(rule) != 3:
            continue

        rule.append(iface)
        try:
            (ret, verbose) = network.route_set(*rule)
        except Exception, e:
            traceback.print_exc()

