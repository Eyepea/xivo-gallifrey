Index: asterisk-chan-sccp-0~prerelease+svn1747/src/sccp_channel.c
===================================================================
--- asterisk-chan-sccp-0~prerelease+svn1747.orig/src/sccp_channel.c	2010-08-18 18:11:14.000000000 +0200
+++ asterisk-chan-sccp-0~prerelease+svn1747/src/sccp_channel.c	2010-08-18 18:14:18.000000000 +0200
@@ -2368,7 +2368,7 @@
 		sccp_log(1)(VERBOSE_PREFIX_3 "%s: Transfer confirmation destination on channel %s\n", d->id, astcDestinationRemote->name);
 		/* display the transferred CID info to destination */
 #ifdef CS_AST_CHANNEL_HAS_CID
-		//sccp_channel_set_callingparty(cDestinationLocal, astcSourceRemote->cid.cid_name, astcSourceRemote->cid.cid_num);
+		//sccp_channel_set_callingparty(cDestinationLocal, astcSourceRemote->lid.lid_name, astcSourceRemote->lid.lid_num);
 
 
 		/* change callInfo on destination part */
Index: asterisk-chan-sccp-0~prerelease+svn1747/src/sccp_pbx.c
===================================================================
--- asterisk-chan-sccp-0~prerelease+svn1747.orig/src/sccp_pbx.c	2010-08-18 12:31:06.000000000 +0200
+++ asterisk-chan-sccp-0~prerelease+svn1747/src/sccp_pbx.c	2010-08-18 18:14:18.000000000 +0200
@@ -252,19 +252,19 @@
 		   enbloc dialed numbers (such as via 7970 enbloc dialing) if they match a certain pattern.
 		   This would help users dial from call history lists on other phones, which do not have enbloc dialing,
 		   when using shared lines. */
-		if(NULL != ast->cid.cid_num && strlen(ast->cid.cid_num) > 0 && strlen(ast->cid.cid_num) < sizeof(suffixedNumber)-2 && '0' == ast->cid.cid_num[0])
+		if(NULL != ast->lid.lid_num && strlen(ast->lid.lid_num) > 0 && strlen(ast->lid.lid_num) < sizeof(suffixedNumber)-2 && '0' == ast->lid.lid_num[0])
 		{
-			strncpy(suffixedNumber, (const char*) ast->cid.cid_num, strlen(ast->cid.cid_num));
-			suffixedNumber[strlen(ast->cid.cid_num)+0] = '#';
-			suffixedNumber[strlen(ast->cid.cid_num)+1] = '\0';
+			strncpy(suffixedNumber, (const char*) ast->lid.lid_num, strlen(ast->lid.lid_num));
+			suffixedNumber[strlen(ast->lid.lid_num)+0] = '#';
+			suffixedNumber[strlen(ast->lid.lid_num)+1] = '\0';
 			sccp_channel_set_callingparty(c, ast->cid.cid_name, suffixedNumber);
 		}
 		else
-			sccp_channel_set_callingparty(c, ast->cid.cid_name, ast->cid.cid_num);
+			sccp_channel_set_callingparty(c, ast->cid.cid_name, ast->lid.lid_num);
 	}
 	else
 	{
-		sccp_channel_set_callingparty(c, ast->cid.cid_name, ast->cid.cid_num);
+		sccp_channel_set_callingparty(c, ast->lid.lid_name, ast->lid.lid_num);
 	}
 #else // CS_AST_CHANNEL_HAS_CID
 	if (ast->callerid && (cidtmp = strdup(ast->callerid))) {
