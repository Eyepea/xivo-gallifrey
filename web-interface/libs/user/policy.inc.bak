<?php

class xivo_user_policy
{
	var $_conf	= array();

	function xivo_user_policy()
	{
		if(($cfg_user = xivo_gat::get('user')) === false)
			trigger_error('Failed to load user Array',E_USER_ERROR);

		if(xivo_issa('policy',$cfg_user) === false)
			trigger_error('Missing or invalid user policy',E_USER_ERROR);

		$this->_conf = $cfg_user['policy'];

		$hash = md5(serialize($this->_conf));
		
		if(xivo_issa('_user_policy',$_SESSION) === false)
			$_SESSION['_user_policy'] = array();

		if(isset($_SESSION['_user_policy']['hash']) === false || $hash !== $_SESSION['_user_policy']['hash'])
		{
			if($this->_mk_tree($this->_conf['tree'],null) === false)
				trigger_error('Invalid policy Array',E_USER_ERROR);
			else
				$_SESSION['_user_policy']['hash'] = $hash;

			if(xivo_issa('group',$this->_conf) === false)
				trigger_error('Missing group array in policy',E_USER_ERROR);
			else
				$_SESSION['_user_policy']['group'] = $this->_conf['group'];
		}
	}

	function _mk_tree($a,$sess)
	{
		$r = false;

		if(($arr = xivo_get_aks($a)) === false)
			return($r);

		for($i = 0;$i < $arr['cnt'];$i++)
		{
			$k = $arr['keys'][$i];
			$v = &$a[$k];
/*
			if(xivo_issa('_query',$v) === true)
				$this->_mk_query($k,$v['_query']);
*/	
			if($k !== '_query')
			{
				if(isset($_SESSION['_user_policy']['tree']) === false)
					$_SESSION['_user_policy']['tree'] = array();

				if($sess === null)
					$sess = &$_SESSION['_user_policy']['tree'];

				if(is_array($v) === true)
				{
					if(isset($sess[$k]) === false)
						$sess[$k] = array();

					$sess[$k] = $this->_mk_tree($v,$sess[$k]);
				}
				else
					$sess[$k] = $v;
			}
		}

		return($sess);
	}

	function _mk_query($k,$a)
	{
		$k = (string) $k;

		if(is_array($a) === false || isset($a['dir'],$a['dir']{0}) === false || is_string($a['dir']) === false)
			return(false);

		if(isset($_SESSION['_user_policy']['query']) === true)
			$_SESSION['_user_policy']['query'] = array();

		if(isset($_SESSION['_user_policy']['query'][$a['dir']]) === true)
			$j = count($_SESSION['_user_policy']['query'][$a['dir']]);
		else
		{
			$j = 0;
			$_SESSION['_user_policy']['query'][$a['dir']] = array();
		}

		$ref = &$_SESSION['_user_policy']['query'][$a['dir']];

		if(isset($a['list']) === true && ($arr = xivo_get_aks($a['list'])) !== false)
		{
			for($i = 0;$i < $arr['cnt'];$i++)
			{
				$kquery = $arr['keys'][$i];
				$v = &$a['list'][$k];

				if(isset($v['valid']) === true && (bool) $v['valid'] === false)
					continue;

				$arr_keys = explode('::',$kquery,3);

				if(isset($arr_keys[0]{0}) === false || isset($arr_keys[2]) === true)
					continue;

				$ref[$j] = array();

				$ref[$j]['zone'] = $arr_keys[0];

				if(isset($arr_keys[1]) === true)
					$ref[$j]['opt'] = $arr_keys[1];

				$url = $param = false;

				if(isset($v['url'],$v['url']{0}) === true && is_string($v['url']) === true)
					$url = true;

				if(xivo_issa('param',$v) === true && empty($v['param']) === false)
					$param = true;

				if($url === false && $param === false)
					continue;

				if($url === true)
					$ref[$j]['url'] = $v['url'];

				if($param === true)
					$ref[$j]['param'] = $v['param'];

				$j++;
			}
		}

		return(true);	
	}
	
}

?>
