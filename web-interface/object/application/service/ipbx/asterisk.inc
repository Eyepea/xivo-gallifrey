<?php

require_once(XIVO_PATH_OBJECT.XIVO_SEP_DIR.'application'.XIVO_SEP_DIR.'service'.XIVO_SEP_DIR.'abstract.inc');

class xivo_application_asterisk_abstract extends xivo_application_service_abstract
{
	var $_service		= null;
	var $_abstract		= array();
	var $_service_type	= 'ipbx';
	var $_service_name	= 'asterisk';
	var $_components	= false;

	function xivo_application_asterisk_abstract(&$service)
	{
		if(xivo_instanceof($service,'xivo_service_asterisk') === false)
			trigger_error('Invalid service in '.__CLASS__,E_USER_ERROR);

		$this->_service = &$service;
	}

	function get_origin()
	{
		return($this->_origin);
	}

	function get_origin_var($var)
	{
		$var = (string) $var;

		if(is_array($this->_origin) === false
		|| isset($this->_origin[$var]) === false)
			return(null);

		return($this->_origin[$var]);
	}

	function mk_interface($name,$chantype,$context='',$number='',$protocol='')
	{
		$chantype = strval($chantype);
		$number = strval($number);

		$r = array();

		if($protocol === XIVO_SRE_IPBX_AST_PROTO_CUSTOM)
		{
			$r['interface'] = $this->_service->mk_interface($name,$protocol);
			$r['channel'] = XIVO_SRE_IPBX_AST_CHAN_UNKNOWN;

			if($r['interface'] === false)
				return(false);

			return($r);
		}

		switch($chantype)
		{
			case XIVO_SRE_IPBX_AST_CHAN_LOCAL:
				$r['interface'] = $this->_service->mk_interface($name,null,$number,$context);

				if($number === '' || $r['interface'] === false)
					return(false);

				$r['channel'] = XIVO_SRE_IPBX_AST_CHAN_LOCAL;
				break;
			default:
				$r['interface'] = $this->_service->mk_interface($name,$protocol);
				$r['channel'] = $this->_service->get_channel_by_protocol($protocol);

				if($r['interface'] === false || $r['channel'] === false)
					return(false);
		}

		return($r);
	}

	function mk_agent_interface($number,$group=false)
	{
		$r = array();
		$r['channel'] = XIVO_SRE_IPBX_AST_CHAN_AGENT;

		if(($r['interface'] = $this->_service->mk_agent_interface($number,$group)) === false)
			return(false);

		return($r);
	}

	function get_context_list($disable=null,$order=null,$limit=null,$assoc=false)
	{
		if(isset($this->_contextlist) === false)
			return(false);
		else if(empty($this->_contextlist) === false)
			return($this->_contextlist);
		else if(($context = &$this->_service->get_module('context')) === false)
			return(false);

		if($order === null)
		{
			$order = array();
			$order['displayname'] = SORT_ASC;
			$order['name'] = SORT_ASC;
		}

		return(($this->_contextlist = $context->get_all($disable,true,$order,$limit,$assoc)));
	}

	function get_musiconhold()
	{
		if(isset($this->_musiconhold) === false)
			return(false);
		else if(empty($this->_musiconhold) === false)
			return($this->_musiconhold);
		else if(($musiconhold = &$this->_service->get_module('musiconhold')) === false)
			return(false);
		else if(($this->_musiconhold = $musiconhold->get_all_category(null,false)) !== false)
			ksort($this->_musiconhold);

		return($this->_musiconhold);
	}

	function _get_extenumbers($typeval)
	{
		$this->_info['extenumbers'] = false;
		$this->_origin['extenumbers'] = false;

		if(($this->_info['extenumbers'] = $this->_extenumbers->get($typeval)) !== false)
			$this->_origin['extenumbers'] = $this->_extenumbers->get_origin();

		return($this->_info['extenumbers']);
	}

	function _get_rightcall($typeval)
	{
		$this->_info['rightcall'] = false;
		$this->_origin['rightcall'] = false;

		if(($this->_info['rightcall'] = $this->_rightcall->get($typeval)) !== false)
			$this->_origin['rightcall'] = $this->_rightcall->get_origin();

		return($this->_info['rightcall']);
	}

	function _get_dialaction($categoryval)
	{
		$this->_info['dialaction'] = false;
		$this->_origin['dialaction'] = false;

		if(($this->_info['dialaction'] = $this->_dialaction->get($categoryval)) !== false)
			$this->_origin['dialaction'] = $this->_dialaction->get_origin();

		return($this->_info['dialaction']);
	}

	function _get_dialstatus($categoryval)
	{
		$this->_info['dialstatus'] = false;
		$this->_origin['dialstatus'] = false;

		if(($this->_info['dialstatus'] = $this->_dialstatus->get($categoryval)) !== false)
			$this->_origin['dialstatus'] = $this->_dialstatus->get_origin();

		return($this->_info['dialstatus']);
	}

	function _get_contextnummember($typeval)
	{
		$this->_info['contextnummember'] = false;
		$this->_origin['contextnummember'] = false;

		if(($this->_info['contextnummember'] = $this->_contextnummember->get($typeval)) !== false)
			$this->_origin['contextnummember'] = $this->_contextnummember->get_origin();

		return($this->_info['contextnummember']);
	}

	function _get_contextmember($typeval='',$varname='')
	{
		$this->_info['contextmember'] = false;
		$this->_origin['contextmember'] = false;

		if(($this->_info['contextmember'] = $this->_contextmember->get($typeval,$varname)) !== false)
			$this->_origin['contextmember'] = $this->_contextmember->get_origin();

		return($this->_info['contextmember']);
	}

	function set_extenumbers($action,$number,$context='',$typeval='')
	{
		if(($r = $this->_extenumbers->set($action,$number,$context,$typeval)) === false)
			$this->_set_error('extenumbers',$this->_extenumbers->get_error());

		$this->_set_result('extenumbers',$this->_extenumbers->get_result());

		return($r);
	}

	function chk_macro($name,$exten,$arr,$context)
	{
		if(($r = $this->_extensions->chk_exten($exten,$context,'macro',$arr)) !== false)
			return($r);
		else if($this->_extensions->get_filter_errnb() > 0)
			$this->_set_error($name,$this->_extensions->get_filter_error());
		else
			$this->_set_error($name,'invalid macro');

		return($r);
	}

	function set_macro($action,$name,$exten,$arr,$context)
	{
		if(($action !== 'add' && $action !== 'edit') === true
		|| xivo_haslen($name) === false)
			return(false);
		else if($action === 'edit' && xivo_issa($name,$this->_info) !== false)
			$r = $this->_extensions->chk_exten($exten,$context,'macro',$arr);
		else
			$r = $this->_extensions->new_exten($exten,$context,'macro',$arr);

		if($r !== false)
			return($r);
		else if($this->_extensions->get_filter_errnb() > 0)
			$this->_set_error($name,$this->_extensions->get_filter_error());
		else
			$this->_set_error($name,'invalid macro');

		return($r);
	}

	function set_rightcall($list)
	{
		if(($r = $this->_rightcall->set($list)) === false)
			$this->_set_error('rightcall',$this->_rightcall->get_error());

		$this->_set_result('rightcall',$this->_rightcall->get_result());

		return($r);
	}

	function set_dialaction($list)
	{
		if(($r = $this->_dialaction->set($list)) === false)
			$this->_set_error('dialaction',$this->_dialaction->get_error());

		$this->_set_result('dialaction',$this->_dialaction->get_result());

		return($r);
	}

	function set_dialstatus($list)
	{
		if(($r = $this->_dialstatus->set($list)) === false)
			$this->_set_error('dialstatus',$this->_dialstatus->get_error());

		$this->_set_result('dialstatus',$this->_dialstatus->get_result());

		return($r);
	}

	function set_contextnummember($context,$number='')
	{
		if(($r = $this->_contextnummember->set($context,$number)) === false)
			$this->_set_error('contextnummember',$this->_contextnummember->get_error());

		$this->_set_result('contextnummember',$this->_contextnummember->get_result());

		return($r);
	}

	function set_contextmember($list)
	{
		if(($r = $this->_contextmember->set($list)) === false)
			$this->_set_error('contextmember',$this->_contextmember->get_error());

		$this->_set_result('contextmember',$this->_contextmember->get_result());

		return($r);
	}

	function add_extenumbers($typeval)
	{
		if(($rs = $this->_extenumbers->add($typeval)) === null || $rs === false)
			return($rs);

		return(($this->_return['extenumbers'] = $this->_extenumbers->get_return()));
	}

	function add_macro($name)
	{
		if(($rs = $this->get_result($name)) === null || $rs === false)
			return($rs);

		return(($this->_return[$name] = $this->_extensions->add_exten($rs)));
	}

	function add_rightcall($typeval)
	{
		$r = $this->_rightcall->add($typeval);

		$this->_return['rightcall'] = $this->_rightcall->get_return();

		return($r);
	}

	function add_dialaction($categoryval)
	{
		$r = $this->_dialaction->add($categoryval);

		$this->_return['dialaction'] = $this->_dialaction->get_return();

		return($r);
	}

	function add_dialstatus($categoryval)
	{
		$r = $this->_dialstatus->add($categoryval);

		$this->_return['dialstatus'] = $this->_dialstatus->get_return();

		return($r);
	}

	function add_contextnummember($typeval)
	{
		$r = $this->_contextnummember->add($typeval);

		$this->_return['contextnummember'] = $this->_contextnummember->get_return();

		return($r);
	}

	function add_contextmember($typeval='')
	{
		$r = $this->_contextmember->add($typeval);

		$this->_return['contextmember'] = $this->_contextmember->get_return();

		return($r);
	}

	function edit_extenumbers()
	{
		if(($rs = $this->_extenumbers->edit()) === null || $rs === false)
			return($rs);

		return(($this->_return['extenumbers'] = $this->_extenumbers->get_return()));
	}

	function edit_macro($name)
	{
		$rs = false;

		if(xivo_issa($name,$this->_info) === false
		|| ($rs = $this->get_result($name)) === null
		|| $rs === false)
			return($rs);

		$this->_return[$name] = $this->_extensions->edit($this->_info[$name]['id'],$rs);

		return($this->_return[$name]);
	}

	function edit_rightcall($typeval)
	{
		$r = $this->_rightcall->edit($this->_status,$typeval);

		$this->_return['rightcall'] = $this->_rightcall->get_return();

		return($r);
	}

	function edit_dialaction($categoryval)
	{
		$r = $this->_dialaction->edit($this->_status,$categoryval);

		$this->_return['dialaction'] = $this->_dialaction->get_return();

		return($r);
	}

	function edit_dialstatus($categoryval)
	{
		$r = $this->_dialstatus->edit($this->_status,$categoryval);

		$this->_return['dialstatus'] = $this->_dialstatus->get_return();

		return($r);
	}

	function edit_contextnummember($typeval)
	{
		$r = $this->_contextnummember->edit($this->_status,$typeval);

		$this->_return['contextnummember'] = $this->_contextnummember->get_return();

		return($r);
	}

	function edit_contextmember($typeval='')
	{
		$r = $this->_contextmember->edit($this->_status,$typeval);

		$this->_return['contextmember'] = $this->_contextmember->get_return();

		return($r);
	}

	function save_extenumbers($typeval)
	{
		if(($rs = $this->_extenumbers->save($this->_status,$typeval)) === null || $rs === false)
			return($rs);

		return(($this->_return['extenumbers'] = $this->_extenumbers->get_return()));
	}

	function delete_extenumbers()
	{
		if(($rs = $this->_extenumbers->delete($this->_status)) === null
		|| $rs === false)
			return($rs);

		if($this->_status === 'delete')
			$this->_return['extenumbers'] = $rs;

		return($rs);
	}

	function delete_macro($name)
	{
		if(xivo_issa($name,$this->_info) === false)
			return(null);

		$r = $this->_extensions->delete($this->_info[$name]['id']);

		if($this->_status === 'delete')
			$this->_return[$name] = $r;

		return($r);
	}

	function delete_rightcall()
	{
		$r = $this->_rightcall->delete($this->_status);

		if($this->_status === 'delete')
			$this->_return['rightcall'] = $r;

		return($r);
	}

	function delete_dialaction()
	{
		$r = $this->_dialaction->delete($this->_status);

		if($this->_status === 'delete')
			$this->_return['dialaction'] = $r;

		return($r);
	}

	function delete_dialstatus()
	{
		$r = $this->_dialstatus->delete($this->_status);

		if($this->_status === 'delete')
			$this->_return['dialstatus'] = $r;

		return($r);
	}

	function delete_contextnummember()
	{
		$r = $this->_contextnummember->delete($this->_status);

		if($this->_status === 'delete')
			$this->_return['contextnummember'] = $r;

		return($r);
	}

	function delete_contextmember()
	{
		$r = $this->_contextmember->delete($this->_status);

		if($this->_status === 'delete')
			$this->_return['contextmember'] = $r;

		return($r);
	}

	function get_destination_list($type='',$id=0,$number=false)
	{
		$r = array();

		$userid = $groupid = $queueid = $scheduleid = 0;

		if($type === 'user')
			$userid = xivo_ulongint($id);
		else if($type === 'group')
			$groupid = xivo_ulongint($id);
		else if($type === 'queue')
			$queueid = xivo_ulongint($id);
		else if($type === 'schedule')
			$scheduleid = xivo_ulongint($id);

		$r['users'] = $this->get_destination_users($userid,$number);
		$r['groups'] = $this->get_destination_groups($groupid,$number);
		$r['queues'] = $this->get_destination_queues($queueid,$number);
		$r['meetme'] = $this->get_destination_meetme(0,$number);
		$r['voicemail'] = $this->get_destination_voicemail();
		$r['schedule'] = $this->get_destination_schedule($scheduleid);
		$r['voicemenu'] = $this->get_destination_voicemenu();

		return($r);
	}

	function get_destination_users($id=0,$number=false)
	{
		$order = array();
		$order['firstname'] = SORT_ASC;
		$order['lastname'] = SORT_ASC;
		$order['number'] = SORT_ASC;
		$order['context'] = SORT_ASC;
		$order['name'] = SORT_ASC;

		if(($ufeatures = &$this->_service->get_module('userfeatures')) !== false
		&& ($r = $ufeatures->get_all_except($id,$number,$order)) !== false)
			return($r);

		return(false);
	}

	function get_destination_groups($id=0,$number=false)
	{
		$order = array();
		$order['name'] = SORT_ASC;
		$order['number'] = SORT_ASC;
		$order['context'] = SORT_ASC;

		if(($gfeatures = &$this->_service->get_module('groupfeatures')) !== false
		&& ($r = $gfeatures->get_all_except($id,$number,$order)) !== false)
			return($r);

		return(false);
	}

	function get_destination_queues($id=0,$number=false)
	{
		$order = array();
		$order['name'] = SORT_ASC;
		$order['number'] = SORT_ASC;
		$order['context'] = SORT_ASC;

		if(($qfeatures = &$this->_service->get_module('queuefeatures')) !== false
		&& ($r = $qfeatures->get_all_except($id,$number,$order)) !== false)
			return($r);

		return(false);
	}

	function get_destination_meetme($id=0,$number=false)
	{
		$order = array();
		$order['name'] = SORT_ASC;
		$order['number'] = SORT_ASC;
		$order['context'] = SORT_ASC;

		if(($mfeatures = &$this->_service->get_module('meetmefeatures')) !== false
		&& ($r = $mfeatures->get_all_except($id,$number,$order)) !== false)
			return($r);

		return(false);
	}

	function get_destination_voicemail()
	{
		$order = array();
		$order['fullname'] = SORT_ASC;
		$order['mailbox'] = SORT_ASC;
		$order['context'] = SORT_ASC;

		if(($voicemail = &$this->_service->get_module('voicemail')) !== false
		&& ($r = $voicemail->get_all(null,true,$order)) !== false)
			return($r);

		return(false);
	}

	function get_destination_schedule($id=0)
	{
		$order = array();
		$order['name'] = SORT_ASC;
		$order['context'] = SORT_ASC;

		if(($schedule = &$this->_service->get_module('schedule')) !== false
		&& ($r = $schedule->get_all_except($id,$order)) !== false)
			return($r);

		return(false);
	}

	function get_destination_voicemenu()
	{
		$order = array();
		$order['name'] = SORT_ASC;
		$order['number'] = SORT_ASC;
		$order['context'] = SORT_ASC;

		if(($voicemenu = &$this->_service->get_module('voicemenu')) !== false
		&& ($r = $voicemenu->get_all(null,true,$order)) !== false)
			return($r);

		return(false);
	}
}

?>
