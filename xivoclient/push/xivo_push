#! /usr/bin/python
# vim: set fileencoding=utf-8 :
#
# $Revision$
# $Date$
#
# Authors : Thomas Bernard, Corentin Le Gall, Sylvain Boily
#           Proformatique
#           67, rue Voltaire
#           92800 PUTEAUX
#           (+33/0)1.41.38.99.60
#           mailto:technique@proformatique.com
#           (C) 2007 Proformatique
#
# AGI de push de fiche
#

## \mainpage
# \section section_1 XIVO pusher AGI
#
## \file xivo_push
# \brief XIVO CTI pushing AGI
#
## \namespace xivo_push
# \brief XIVO CTI pushing AGI
#

CONFIG_XIVO_DAEMON = '/etc/asterisk/xivo_daemon.conf'

# XIVO modules
import xivo.to_path

import sys
import socket
import ConfigParser
from ConfigDict import *
from agi import *

agi = AGI()

## \brief Logs a message into the Asterisk CLI
# \param txt message to send to the CLI
def print_verbose(txt):
        agi.verbose("xivo_push : %s" % txt)

# ==============================================================================
# Main Code starts here
# ==============================================================================

xivocapas = ConfigParser.ConfigParser()
xivocapas.readfp(open(CONFIG_XIVO_DAEMON))
xivocapas_general = dict(xivocapas.items("general"))
if 'capabilities' in xivocapas_general:
        xcapa = xivocapas_general['capabilities'].split(",")
        if 'customerinfo' not in xcapa:
                sys.exit(2)
else:
        sys.exit(2)


if len(sys.argv) < 1:
	print "Usage :", sys.argv[0], "<server> <port> <proto> <user> <calleridnum> [<msgext>] [<calleridname>]"
	sys.exit(1)
else:
	shost = sys.argv[1]
	sport = int(xivocapas.get('general', 'port_fiche_agi'))
	proto   = agi.get_variable('PROTO').lower()
	exten   = agi.get_variable('NAME')
	context = agi.get_variable('MACRO_CONTEXT')
	calleridnum  = agi.env['agi_callerid']
	calleridname = agi.env['agi_calleridname']
	msgext = agi.get_variable('CALLTYPE')
	user = proto + exten

# send the PUSH command to the server
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((shost, sport))
fs = s.makefile('r')
s.send('PUSH %s %s <%s> %s\r\n' % (user, calleridnum, context, msgext))
s.close()
list = fs.readline().strip().split(' ', 5) # keeps the last items joined by their spaces
fs.close()

if len(list) < 5 or list[0] == 'ERROR':
	print_verbose("Received an ERROR for user <%s> : %s" % (user, str(list)))
	sys.exit(3)
else:
        # USER xxx STATE xxx CIDNAME xxx
        clientstate = list[3]

        if calleridnum == 'unknown':
                # to set according to os.getenv('LANG') or os.getenv('LANGUAGE') later on ?
                calleridnum = 'Inconnu'
        if calleridname == 'unknown':
                calleridname = ''

        if len(list) > 5:
                calleridtoset = "\"%s <%s>\"" %(list[5], calleridnum)
        else:
                calleridtoset = "\"%s <%s>\"" %(calleridname, calleridnum)
        print_verbose("The Caller Id will be set to <%s>" % calleridtoset)
        agi.set_callerid(calleridtoset)

if clientstate == "available":
	agi.set_variable('STATUS', 0)
elif clientstate == "away":
	agi.set_variable('STATUS', 1)
elif clientstate == "donotdisturb":
	agi.set_variable('STATUS', 2)
elif clientstate == "outtolunch":
	agi.set_variable('STATUS', 3)
elif clientstate == "berightback":
	agi.set_variable('STATUS', 4)
else:
	print_verbose("Unknown user's availability status : %s" % clientstate)
